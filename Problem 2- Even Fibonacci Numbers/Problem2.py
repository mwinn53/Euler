# ---------------------------------------------------------------------------
# Problem 2
# ---------------------------------------------------------------------------
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.

# function: Fib()   Calculate a series of 'term' fibonacci numbers
#   input:  (lim) term, the max limit of the largest term in the sequence
#   output: the sum of the even fibonacci numbers up to lim

def Fib(lim):
    fib = 0
    f1 = 1
    f2 = 1
    i = 3
    sum = 0
    
    while fib <= lim:
        fib = f1 + f2
        if fib % 2 == 0:
            sum += fib
            print 'Even Fib {0}'.format(fib)
        print 'Fibonacci number Fn {0} ({1}+{2}={3}) \t Sum: {4}'.format(i, f1, f2, fib, sum)
        f1 = f2
        f2 = fib
        i += 1
        

    print 'Limit reached. Sum = {0}'.format(sum)

    return sum
